name: Docker Deploy

on:
    push:
        tags:
            - "*"

env:
    COMPOSE_PROJECT_NAME: admin-builder

jobs:
    docker-db:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Log in to GitHub Container Registry
                run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            -   name: Build MySQL Docker Image (prod)
                run: |
                    docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-db:${{ github.ref_name }} -f docker/dockerfiles/mysql/Dockerfile .

            -   name: Push MySQL Docker Image
                run: |
                    docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-db:${{ github.ref_name }}

    docker-nginx:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Log in to GitHub Container Registry
                run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            -   name: Build Nginx
                run: |
                    docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-nginx:${{ github.ref_name }} --target=prod -f docker/dockerfiles/nginx/Dockerfile .

            -   name: Push Nginx Docker Image
                run: |
                    docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-nginx:${{ github.ref_name }}

    docker-php:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Log in to GitHub Container Registry
                run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            -   name: Build PHP Docker Image (prod)
                run: |
                    docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-php:${{ github.ref_name }} --target=prod --build-arg user=develop --build-arg uid=1000 --build-arg gh_token=${{ secrets.GH_TOKEN }} --build-arg ms_user=${{ secrets.MS_USER }} --build-arg ms_pass=${{ secrets.MS_PASS }} -f docker/dockerfiles/php/Dockerfile .

            -   name: Push PHP Docker Image
                run: |
                    docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-php:${{ github.ref_name }}

    docker-worker:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Log in to GitHub Container Registry
                run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            -   name: Build PHP Docker Image (worker)
                run: |
                    docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-php:${{ github.ref_name }} --target=worker --build-arg user=develop --build-arg uid=1000 --build-arg gh_token=${{ secrets.GH_TOKEN }} --build-arg ms_user=${{ secrets.MS_USER }} --build-arg ms_pass=${{ secrets.MS_PASS }} -f docker/dockerfiles/php/Dockerfile .

            -   name: Push PHP Docker Image (worker)
                run: |
                    docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-php:${{ github.ref_name }}

    docker-scheduler:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Log in to GitHub Container Registry
                run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            -   name: Build PHP Docker Image (scheduler)
                run: |
                    docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-php:${{ github.ref_name }} --target=scheduler --build-arg user=develop --build-arg uid=1000 --build-arg gh_token=${{ secrets.GH_TOKEN }} --build-arg ms_user=${{ secrets.MS_USER }} --build-arg ms_pass=${{ secrets.MS_PASS }} -f docker/dockerfiles/php/Dockerfile .

            -   name: Push PHP Docker Image (scheduler)
                run: |
                    docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.COMPOSE_PROJECT_NAME }}-php:${{ github.ref_name }}
    deploy:
        runs-on: ubuntu-latest
        needs: [docker-db, docker-nginx, docker-php, docker-worker, docker-scheduler]
        steps:
            -   name: Deploy to production
                run: 'echo "deploy"'